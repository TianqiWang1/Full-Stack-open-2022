{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","put","concat","delete","Filter","_ref","filter","filterByName","react_default","a","createElement","name","value","onChange","PersonForm","addPerson","handlePersonChange","newPerson","onSubmit","number","type","Persons","personsToShow","deletePerson","map","person","key","onClick","Notification","message","className","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNewPerson","_useState5","_useState6","setFilter","_useState7","_useState8","setPersonsToShow","_useState9","_useState10","errorMessage","setErrorMessage","useEffect","personService","console","log","timer","setTimeout","clearTimeout","components_Notification","components_Filter","event","search","target","toLowerCase","includes","components_PersonForm","preventDefault","person_names","length","window","confirm","current_person","updatedPersons","catch","error","objectSpread","defineProperty","components_Persons","newPersons","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","promise","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.383b1a8b.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\nexport default{getAll, create, update, remove}","import React from 'react';\r\n\r\nconst Filter = ({filter, filterByName}) => {\r\n    return (\r\n      <div>filter shown with <input name='filter' value={filter} onChange={filterByName} /></div>\r\n    )\r\n  }\r\n\r\n  export default Filter;","import React from 'react';\r\n\r\nconst PersonForm = ({addPerson, handlePersonChange, newPerson}) => {\r\n    return (\r\n      <form onSubmit={addPerson}>\r\n      <div>name: <input name='name' value={newPerson.name} onChange={handlePersonChange}/></div>\r\n      <div>number: <input name='number' value={newPerson.number} onChange={handlePersonChange}/></div>\r\n      <div><button type=\"submit\">add</button></div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  export default PersonForm;","import React from 'react';\r\n\r\nconst Persons = ({personsToShow, deletePerson}) => {\r\n  \r\n    return (\r\n      <div>\r\n      {personsToShow.map(person => \r\n        <div key={person.id}>\r\n           {person.name} {person.number} \r\n           <button onClick={() => deletePerson(person.id, person.name)}>delete</button>\r\n        </div>\r\n      )}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Persons","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className='error'>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import React from 'react';\nimport personService from './services/persons'\nimport { useEffect, useState } from 'react'\nimport Filter from \"./components/Filter\"\nimport PersonForm from \"./components/PersonForm\"\nimport Persons from \"./components/Persons\"\nimport Notification from \"./components/Notification\"\n\n\n\n\nconst App = () => {\n\n\n  const [persons, setPersons] = useState([])\n  const [newPerson, setNewPerson] = useState({name:'', number:''})\n  const [filter, setFilter] = useState(\"\")\n  const [personsToShow, setPersonsToShow] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(()=> {\n    personService.getAll().then(response => {\n      console.log('promise fulfilled')\n      setPersons(response)\n      setPersonsToShow(response)\n    })\n  },[])\n\n\n  useEffect(() => {\n    const timer = setTimeout(() => {setErrorMessage(null)}, 1000)\n    return () => {clearTimeout(timer)}\n  },[errorMessage]);\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    console.log(newPerson.name)\n    console.log(newPerson.number)\n    const person_names = persons.map(person => person.name)\n    const newObject = {\n      name: newPerson.name,\n      number: newPerson.number,\n      id: persons.length+1\n    }\n\n    if (person_names.includes(newPerson.name)) {\n      if (window.confirm(`${newPerson.name} is already added to the phone book, replace the old phone number with a new one?`)) {\n        const current_person = persons.filter(person => person.name === newPerson.name)\n        console.log(current_person)\n        personService.update(current_person[0].id, newObject).then((response) => {\n          const updatedPersons = persons.map(person => person.id !== response.id? person:response)\n          setPersons(updatedPersons)\n          setPersonsToShow(updatedPersons)\n          setErrorMessage(`updated ${newPerson.name}`)\n        })\n        .catch(error => {\n          setErrorMessage(`failed to upated person ${newPerson.name}: ${error.response.data}`)\n          console.log(error.response.data)\n        }\n      )\n      }\n    }\n\n    else {\n      personService.create(newObject).then(response =>{\n        setPersons(persons.concat(response))\n        setPersonsToShow(persons.concat(response))\n        setNewPerson({name:'',number:''})\n        setErrorMessage(`Added ${newObject.name} to the phonebook`)\n      }).catch(error => {\n        setErrorMessage(`failed to add person ${newObject.name}: : ${error.response.data}`)\n        console.log(error.response.data)\n      })\n    }\n\n  }\n\n  const handlePersonChange = (event) => {\n    //console.log(event.target.value)\n    setNewPerson({...newPerson, [event.target.name]: event.target.value})\n  }\n\n  const filterByName = (event) => {\n    const search = event.target.value\n    setFilter(search)\n    setPersonsToShow(persons.filter(person => person.name.toLowerCase().includes(search)))\n\n  }\n\n  const deletePerson= (id, name) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personService.remove(id).then(response => {\n      const newPersons = persons.filter(person => person.id !== id)\n      setPersons(newPersons)\n      setPersonsToShow(newPersons)\n      setErrorMessage(`Information of ${name} has been removed from the server.`)\n      })\n      .catch(error => {\n        setErrorMessage(`failed to delete person ${name}: ${error.response.data}`)\n        console.log(error.response.data)\n      })\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={errorMessage} />\n      <h2>Phonebook</h2>\n      <Filter filter={filter} filterByName={filterByName}/>\n      <h2>add a new</h2>\n      <PersonForm addPerson={addPerson} handlePersonChange={handlePersonChange} newPerson={newPerson}/>\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios  from 'axios';\n\nconst promise = axios.get('http://localhost:3001/persons')\nconsole.log(promise)\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}